name: Release Docker Images

on:
  push:
    tags:
      - 'v*'  # 觸發條件：推送 v* 格式的標籤 (例如 v1.0.0, v2.1.0)
  workflow_dispatch:  # 允許手動觸發

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: HuangNO1/stellar-lab-web

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        include:
          - name: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: backend
            context: ./backend
            dockerfile: ./backend/Dockerfile
            platforms: linux/amd64,linux/arm64
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.name }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Lab Website ${{ matrix.name }}
            org.opencontainers.image.description=Modern laboratory website framework - ${{ matrix.name }} service
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.licenses=MIT
            
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  create-release:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Extract version from tag
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOF'
          ## 🚀 Lab Website Framework ${{ steps.version.outputs.version }}
          
          ### 📦 Docker Images
          
          This release includes the following Docker images:
          
          #### Frontend (Vue 3 + TypeScript)
          ```bash
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/frontend:${{ steps.version.outputs.version }}
          ```
          
          #### Backend (Flask + Python)  
          ```bash
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/backend:${{ steps.version.outputs.version }}
          ```
          
          ### 🔧 Quick Deployment
          
          #### Using Docker Compose
          ```bash
          # Download the release
          curl -L https://github.com/${{ github.repository }}/archive/${{ steps.version.outputs.tag }}.tar.gz | tar xz
          cd lab_web-${{ steps.version.outputs.version }}
          
          # Deploy with released images
          docker-compose up -d
          ```
          
          #### Using Individual Images
          ```bash
          # Frontend
          docker run -d -p 3000:80 \
            --name lab-frontend \
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/frontend:${{ steps.version.outputs.version }}
          
          # Backend (requires database)
          docker run -d -p 8000:8000 \
            --name lab-backend \
            -e DATABASE_URL="your-database-url" \
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/backend:${{ steps.version.outputs.version }}
          ```
          
          ### 🌐 Supported Architectures
          - `linux/amd64` (Intel/AMD 64-bit)
          - `linux/arm64` (ARM 64-bit, Apple Silicon, etc.)
          
          ### 🔖 Available Tags
          - `${{ steps.version.outputs.version }}` - Specific version
          - `latest` - Latest stable release
          
          ### 📋 Features in this Release
          - ✅ Multi-language support (English/Chinese)
          - ✅ Light/Dark theme switching
          - ✅ Responsive design
          - ✅ Complete admin dashboard
          - ✅ Docker containerization
          - ✅ Production-ready deployment
          
          ### 📚 Documentation
          - [Installation Guide](https://github.com/${{ github.repository }}#quick-start)
          - [Deployment Guide](https://github.com/${{ github.repository }}/blob/main/docs/DEPLOYMENT.md)
          - [API Documentation](https://github.com/${{ github.repository }}/blob/main/backend/docs/)
          
          ### 🐛 Report Issues
          Found a bug? Please report it [here](https://github.com/${{ github.repository }}/issues).
          
          ---
          
          **Full Changelog**: [${{ steps.version.outputs.tag }}](https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.tag }})
          EOF
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Lab Website Framework ${{ steps.version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}